{
	"inputs": [],
	"servers": {
		"huggingface": {
			"type": "http",
			"url": "https://hf.co/mcp",
			"gallery": true,
			"version": "0.0.1"
		},
		"markitdown": {
			"type": "stdio",
			"command": "uvx",
			"args": [
				"markitdown-mcp"
			],
			"gallery": true,
			"version": "0.0.1"
		},
		"monday": {
			"command": "npx",
			"args": [
				"mcp-server-monday"
			],
			"type": "stdio"
		},
		"google-calendar": {
			"command": "npx",
			"args": [
				"google-calendar-mcp-server"
			],
			"type": "stdio"
		},
		"jira-server-alt": {
			"command": "npx",
			"args": [
				"mcp-atlassian"
			],
			"type": "stdio"
		},
		"memory": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-memory"
			],
			"type": "stdio"
		},
		"filesystem": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-filesystem"
			],
			"type": "stdio"
		},
		"notion": {
			"command": "npx",
			"args": [
				"notion-mcp-server"
			],
			"type": "stdio"
		},
		"fetch": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-fetch"
			],
			"type": "stdio"
		},
		"slack": {
			"command": "npx",
			"args": [
				"slack-mcp-server"
			],
			"type": "stdio"
		},
		"airtable": {
			"command": "npx",
			"args": [
				"airtable-mcp-server"
			],
			"type": "stdio"
		},
		"docker": {
			"command": "npx",
			"args": [
				"mcp-server-docker"
			],
			"type": "stdio"
		},
		"kubernetes": {
			"command": "npx",
			"args": [
				"mcp-server-kubernetes"
			],
			"type": "stdio"
		},
		"docker-server-alt": {
			"command": "npx",
			"args": [
				"mcp-server-docker"
			],
			"type": "stdio"
		},
		"stripe": {
			"command": "npx",
			"args": [
				"mcp-stripe"
			],
			"type": "stdio"
		},
		"git": {
			"command": "uvx",
			"args": [
				"mcp-server-git",
				"--repository",
				"c:\\Users\\Clay\\source\\repos\\EtoAudioBook - Copy"
			],
			"type": "stdio",
			"description": "Git repository operations for this project"
		},
		"everything": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-everything"
			],
			"type": "stdio"
		},
		"python-sandbox": {
			"command": "uvx",
			"args": [
				"mcp-run-python"
			],
			"type": "stdio",
			"description": "Run Python/Flask code in secure sandbox"
		},
		"openai-tts": {
			"command": "python",
			"args": [
				"-c", 
				"import fastmcp; from openai import OpenAI; client = OpenAI(); fastmcp.Server('openai-tts', description='OpenAI TTS integration').serve()"
			],
			"type": "stdio",
			"description": "OpenAI Text-to-Speech integration via FastMCP",
			"env": {
				"OPENAI_API_KEY": "your-openai-api-key-here"
			}
		},
		"github": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-github"
			],
			"type": "stdio",
			"description": "GitHub integration for repository management"
		},
		"brave-search": {
			"command": "npx",
			"args": [
				"@modelcontextprotocol/server-brave-search"
			],
			"type": "stdio",
			"description": "Web search capabilities",
			"env": {
				"BRAVE_API_KEY": "your-brave-api-key"
			}
		}
	}
}
